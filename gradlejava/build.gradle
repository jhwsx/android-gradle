plugins {
    id 'java'
}
// 这个没有被回调
project.beforeEvaluate {
    println "Configuration: beforeEvaluate"
}
group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}
// 一个 Project 代表一个正在构建的组件（如 jar 文件，aar 文件，apk 文件），当构建开始时，Gradle 会基于 build.gradle 实例化
// 一个 org.gradle.Project 对象，并通过 project 变量隐式地调用其成员
println "project = $project"
println "项目分组 group = ${project.group}"
println "项目目录名 name = ${project.name}"
println "项目版本 version = ${project.version}"
println "项目绝对路径 path = ${project.path}"
println "项目描述 description = ${project.description}"
println "包含生成脚本目录 projectDir = ${project.projectDir}"
println "projectDir/build 目录 buildDir = ${project.buildDir}"
println "AntBuilder 实例 ant = ${project.ant}"
/*
project = root project 'gradlejava'
项目分组 group = org.example
项目目录名 name = gradlejava
项目版本 version = 1.0-SNAPSHOT
项目绝对路径 path = :
项目描述 description = null
包含生成脚本目录 projectDir = D:\Android\Workspace\android-gradle\gradlejava
projectDir/build 目录 buildDir = D:\Android\Workspace\android-gradle\gradlejava\build
AntBuilder 实例 ant = org.gradle.api.internal.project.DefaultAntBuilder@66e689ac
 */

project.afterEvaluate {
    println "Configuration: afterEvaluate, $it"
}